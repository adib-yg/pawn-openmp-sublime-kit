{
    "scope": "source.pawn - variable.other.pawn",

    "completions": 
    [
		"MAX_VEHICLES",
		"INVALID_VEHICLE_ID",
		"CARMODTYPE_NONE",
		"CARMODTYPE_SPOILER",
		"CARMODTYPE_HOOD",
		"CARMODTYPE_ROOF",
		"CARMODTYPE_SIDESKIRT",
		"CARMODTYPE_LAMPS",
		"CARMODTYPE_NITRO",
		"CARMODTYPE_EXHAUST",
		"CARMODTYPE_WHEELS",
		"CARMODTYPE_STEREO",
		"CARMODTYPE_HYDRAULICS",
		"CARMODTYPE_FRONT_BUMPER",
		"CARMODTYPE_REAR_BUMPER",
		"CARMODTYPE_VENT_RIGHT",
		"CARMODTYPE_VENT_LEFT",
		"CARMODTYPE_FRONT_BULLBAR",
		"CARMODTYPE_REAR_BULLBAR",
		"MAX_CARMODS",
		"VEHICLE_PARAMS_UNSET",
		"VEHICLE_PARAMS_OFF",
		"VEHICLE_PARAMS_ON",
		"VEHICLE_MODEL_INFO_SIZE",
		"VEHICLE_MODEL_INFO_FRONT_SEAT",
		"VEHICLE_MODEL_INFO_REAR_SEAT",
		"VEHICLE_MODEL_INFO_PETROL_CAP",
		"VEHICLE_MODEL_INFO_WHEELS_FRONT",
		"VEHICLE_MODEL_INFO_WHEELS_REAR",
		"VEHICLE_MODEL_INFO_WHEELS_MID",
		"VEHICLE_MODEL_INFO_FRONT_BUMPER_Z",
		"VEHICLE_MODEL_INFO_REAR_BUMPER_Z",
		"VEHICLE_MODEL_INFO_FRONTSEAT",
		"VEHICLE_MODEL_INFO_REARSEAT",
		"VEHICLE_MODEL_INFO_PETROLCAP",
		"VEHICLE_MODEL_INFO_WHEELSFRONT",
		"VEHICLE_MODEL_INFO_WHEELSREAR",
		"VEHICLE_MODEL_INFO_WHEELSMID",
		"VEHICLE_MODEL_INFO_FRONT_BUMPER",
		"VEHICLE_MODEL_INFO_REAR_BUMPER",
		"VEHICLE_PANEL_STATUS_NONE",
		"VEHICLE_DOOR_STATUS_NONE",
		"VEHICLE_DOOR_STATUS_BONNET_OPEN",
		"VEHICLE_DOOR_STATUS_BONNET_DAMAGED",
		"VEHICLE_DOOR_STATUS_BONNET_MISSING",
		"VEHICLE_DOOR_STATUS_HOOD_OPEN",
		"VEHICLE_DOOR_STATUS_HOOD_DAMAGED",
		"VEHICLE_DOOR_STATUS_HOOD_MISSING",
		"VEHICLE_DOOR_STATUS_BOOT_OPEN",
		"VEHICLE_DOOR_STATUS_BOOT_DAMAGED",
		"VEHICLE_DOOR_STATUS_BOOT_MISSING",
		"VEHICLE_DOOR_STATUS_TRUNK_OPEN",
		"VEHICLE_DOOR_STATUS_TRUNK_DAMAGED",
		"VEHICLE_DOOR_STATUS_TRUNK_MISSING",
		"VEHICLE_DOOR_STATUS_FRONT_LEFT_OPEN",
		"VEHICLE_DOOR_STATUS_FRONT_LEFT_DAMAGED",
		"VEHICLE_DOOR_STATUS_FRONT_LEFT_MISSING",
		"VEHICLE_DOOR_STATUS_DRIVER_OPEN",
		"VEHICLE_DOOR_STATUS_DRIVER_DAMAGED",
		"VEHICLE_DOOR_STATUS_DRIVER_MISSING",
		"VEHICLE_DOOR_STATUS_FRONT_RIGHT_OPEN",
		"VEHICLE_DOOR_STATUS_FRONT_RIGHT_DAMAGED",
		"VEHICLE_DOOR_STATUS_FRONT_RIGHT_MISSING",
		"VEHICLE_DOOR_STATUS_PASSENGER_OPEN",
		"VEHICLE_DOOR_STATUS_PASSENGER_DAMAGED",
		"VEHICLE_DOOR_STATUS_PASSENGER_MISSING",
		"CARDOOR_NONE",
		"CARDOOR_BONNET_OPEN",
		"CARDOOR_BONNET_DAMAGED",
		"CARDOOR_BONNET_MISSING",
		"CARDOOR_HOOD_OPEN",
		"CARDOOR_HOOD_DAMAGED",
		"CARDOOR_HOOD_MISSING",
		"CARDOOR_BOOT_OPEN",
		"CARDOOR_BOOT_DAMAGED",
		"CARDOOR_BOOT_MISSING",
		"CARDOOR_TRUNK_OPEN",
		"CARDOOR_TRUNK_DAMAGED",
		"CARDOOR_TRUNK_MISSING",
		"CARDOOR_FRONT_LEFT_OPEN",
		"CARDOOR_FRONT_LEFT_DAMAGED",
		"CARDOOR_FRONT_LEFT_MISSING",
		"CARDOOR_DRIVER_OPEN",
		"CARDOOR_DRIVER_DAMAGED",
		"CARDOOR_DRIVER_MISSING",
		"CARDOOR_FRONT_RIGHT_OPEN",
		"CARDOOR_FRONT_RIGHT_DAMAGED",
		"CARDOOR_FRONT_RIGHT_MISSING",
		"CARDOOR_PASSENGER_OPEN",
		"CARDOOR_PASSENGER_DAMAGED",
		"CARDOOR_PASSENGER_MISSING",
		"VEHICLE_LIGHT_STATUS_NONE",
		"VEHICLE_LIGHT_STATUS_FRONT_LEFT_BROKEN",
		"VEHICLE_LIGHT_STATUS_FRONT_RIGHT_BROKEN",
		"VEHICLE_LIGHT_STATUS_DRIVER_BROKEN",
		"VEHICLE_LIGHT_STATUS_PASSENGER_BROKEN",
		"VEHICLE_LIGHT_STATUS_REAR_BROKEN",
		"CARLIGHT_FRONT_LEFT_BROKEN",
		"CARLIGHT_FRONT_RIGHT_BROKEN",
		"CARLIGHT_DRIVER_BROKEN",
		"CARLIGHT_PASSENGER_BROKEN",
		"CARLIGHT_REAR_BROKEN",
		"VEHICLE_TYRE_STATUS_FRONT_LEFT_POPPED",
		"VEHICLE_TYRE_STATUS_FRONT_RIGHT_POPPED",
		"VEHICLE_TYRE_STATUS_REAR_LEFT_POPPED",
		"VEHICLE_TYRE_STATUS_REAR_RIGHT_POPPED",
		"VEHICLE_TIRE_STATUS_FRONT_LEFT_POPPED",
		"VEHICLE_TIRE_STATUS_FRONT_RIGHT_POPPED",
		"VEHICLE_TIRE_STATUS_REAR_LEFT_POPPED",
		"VEHICLE_TIRE_STATUS_REAR_RIGHT_POPPED",
		"CARTYRE_FRONT_LEFT_POPPED",
		"CARTYRE_FRONT_RIGHT_POPPED",
		"CARTYRE_REAR_LEFT_POPPED",
		"CARTYRE_REAR_RIGHT_POPPED",
		"CARTIRE_FRONT_LEFT_POPPED",
		"CARTIRE_FRONT_RIGHT_POPPED",
		"CARTIRE_REAR_LEFT_POPPED",
		"CARTIRE_REAR_RIGHT_POPPED",

		/*
			Natives
		*/
		{"trigger": "AddStaticVehicle", "contents": "AddStaticVehicle(${1:modelid}, ${2:Float:spawnX}, ${3:Float:spawnY}, ${4:Float:spawnZ}, ${5:Float:angle}, ${6:colour1}, ${7:colour2})"},
		{"trigger": "AddStaticVehicleEx", "contents": "AddStaticVehicleEx(${1:modelid}, ${2:Float:spawnX}, ${3:Float:spawnY}, ${4:Float:spawnZ}, ${5:Float:angle}, ${6:colour1}, ${7:colour2}, ${8:respawnDelay}, ${9:bool:addSiren = false})"},
		{"trigger": "CreateVehicle", "contents": "CreateVehicle(${1:modelid}, ${2:Float:spawnX}, ${3:Float:spawnY}, ${4:Float:spawnZ}, ${5:Float:angle}, ${6:colour1}, ${7:colour2}, ${8:respawnDelay}, ${9:bool:addSiren = false})"},
		{"trigger": "DestroyVehicle", "contents": "DestroyVehicle(${1:vehicleid})"},
		{"trigger": "IsVehicleStreamedIn", "contents": "IsVehicleStreamedIn(${1:vehicleid}, ${2:playerid})"},
		{"trigger": "GetVehiclePos", "contents": "GetVehiclePos(${1:vehicleid}, ${2:&Float:x}, ${3:&Float:y}, ${4:&Float:z})"},
		{"trigger": "SetVehiclePos", "contents": "SetVehiclePos(${1:vehicleid}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z})"},
		{"trigger": "GetVehicleZAngle", "contents": "GetVehicleZAngle(${1:vehicleid}, ${2:&Float:angle})"},
		{"trigger": "GetVehicleRotationQuat", "contents": "GetVehicleRotationQuat(${1:vehicleid}, ${2:&Float:w}, ${3:&Float:x}, ${4:&Float:y}, ${5:&Float:z})"},
		{"trigger": "GetVehicleDistanceFromPoint", "contents": "GetVehicleDistanceFromPoint(${1:vehicleid}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z})"},
		{"trigger": "SetVehicleZAngle", "contents": "SetVehicleZAngle(${1:vehicleid}, ${2:Float:angle})"},
		{"trigger": "SetVehicleParamsForPlayer", "contents": "SetVehicleParamsForPlayer(${1:vehicleid}, ${2:playerid}, ${3:bool:objective = undefined}, ${4:bool:doors = undefined})"},
		{"trigger": "ManualVehicleEngineAndLights", "contents": "ManualVehicleEngineAndLights()"},
		{"trigger": "SetVehicleParamsEx", "contents": "SetVehicleParamsEx(${1:vehicleid}, ${2:bool:engine = undefined}, ${3:bool:lights = undefined}, ${4:bool:alarm = undefined}, ${5:bool:doors = undefined}, ${6:bool:bonnet = undefined}, ${7:bool:boot = undefined}, ${8:bool:objective = undefined})"},
		{"trigger": "GetVehicleParamsEx", "contents": "GetVehicleParamsEx(${1:vehicleid}, ${2:&bool:engine = undefined}, ${3:&bool:lights = undefined}, ${4:&bool:alarm = undefined}, ${5:&bool:doors = undefined}, ${6:&bool:bonnet = undefined}, ${7:&bool:boot = undefined}, ${8:&bool:objective = undefined})"},
		{"trigger": "GetVehicleParamsSirenState", "contents": "GetVehicleParamsSirenState(${1:vehicleid})"},
		{"trigger": "SetVehicleParamsCarDoors", "contents": "SetVehicleParamsCarDoors(${1:vehicleid}, ${2:bool:frontLeft = undefined}, ${3:bool:frontRight = undefined}, ${4:bool:rearLeft = undefined}, ${5:bool:rearRight = undefined})"},
		{"trigger": "GetVehicleParamsCarDoors", "contents": "GetVehicleParamsCarDoors(${1:vehicleid}, ${2:&bool:frontLeft = undefined}, ${3:&bool:frontRight = undefined}, ${4:&bool:rearLeft = undefined}, ${5:&bool:rearRight = undefined})"},
		{"trigger": "SetVehicleParamsCarWindows", "contents": "SetVehicleParamsCarWindows(${1:vehicleid}, ${2:bool:frontLeft = undefined}, ${3:bool:frontRight = undefined}, ${4:bool:rearLeft = undefined}, ${5:bool:rearRight = undefined})"},
		{"trigger": "GetVehicleParamsCarWindows", "contents": "GetVehicleParamsCarWindows(${1:vehicleid}, ${2:&bool:frontLeft = undefined}, ${3:&bool:frontRight = undefined}, ${4:&bool:rearLeft = undefined}, ${5:&bool:rearRight = undefined})"},
		{"trigger": "SetVehicleToRespawn", "contents": "SetVehicleToRespawn(${1:vehicleid})"},
		{"trigger": "LinkVehicleToInterior", "contents": "LinkVehicleToInterior(${1:vehicleid}, ${2:interiorid})"},
		{"trigger": "AddVehicleComponent", "contents": "AddVehicleComponent(${1:vehicleid}, ${2:component})"},
		{"trigger": "RemoveVehicleComponent", "contents": "RemoveVehicleComponent(${1:vehicleid}, ${2:component})"},
		{"trigger": "ChangeVehicleColours", "contents": "ChangeVehicleColours(${1:vehicleid}, ${2:colour1}, ${3:colour2})"},
		{"trigger": "ChangeVehiclePaintjob", "contents": "ChangeVehiclePaintjob(${1:vehicleid}, ${2:paintjob})"},
		{"trigger": "SetVehicleHealth", "contents": "SetVehicleHealth(${1:vehicleid}, ${2:Float:health})"},
		{"trigger": "GetVehicleHealth", "contents": "GetVehicleHealth(${1:vehicleid}, ${2:&Float:health})"},
		{"trigger": "AttachTrailerToVehicle", "contents": "AttachTrailerToVehicle(${1:trailerid}, ${2:vehicleid})"},
		{"trigger": "DetachTrailerFromVehicle", "contents": "DetachTrailerFromVehicle(${1:vehicleid})"},
		{"trigger": "IsTrailerAttachedToVehicle", "contents": "IsTrailerAttachedToVehicle(${1:vehicleid})"},
		{"trigger": "GetVehicleTrailer", "contents": "GetVehicleTrailer(${1:vehicleid})"},
		{"trigger": "SetVehicleNumberPlate", "contents": "SetVehicleNumberPlate(${1:vehicleid}, ${2:const numberPlate[]})"},
		{"trigger": "GetVehicleModel", "contents": "GetVehicleModel(${1:vehicleid})"},
		{"trigger": "GetVehicleComponentInSlot", "contents": "GetVehicleComponentInSlot(${1:vehicleid}, ${2:CARMODTYPE:slot})"},
		{"trigger": "GetVehicleComponentType", "contents": "GetVehicleComponentType(${1:component})"},
		{"trigger": "GetRandomVehicleColourPair", "contents": "GetRandomVehicleColourPair(${1:modelid}, ${2:&colour1}, ${3:&colour2}, ${4:&colour3 = 0}, ${5:&colour4 = 0})"},
		{"trigger": "VehicleColourIndexToColour", "contents": "VehicleColourIndexToColour(${1:index}, ${2:alpha = 0xFF})"},
		{"trigger": "RepairVehicle", "contents": "RepairVehicle(${1:vehicleid})"},
		{"trigger": "GetVehicleVelocity", "contents": "GetVehicleVelocity(${1:vehicleid}, ${2:&Float:x}, ${3:&Float:y}, ${4:&Float:z})"},
		{"trigger": "SetVehicleVelocity", "contents": "SetVehicleVelocity(${1:vehicleid}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z})"},
		{"trigger": "SetVehicleAngularVelocity", "contents": "SetVehicleAngularVelocity(${1:vehicleid}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z})"},
		{"trigger": "GetVehicleDamageStatus", "contents": "GetVehicleDamageStatus(${1:vehicleid}, ${2:&VEHICLE_PANEL_STATUS:panels}, ${3:&VEHICLE_DOOR_STATUS:doors}, ${4:&VEHICLE_LIGHT_STATUS:lights}, ${5:&VEHICLE_TYRE_STATUS:tyres})"},
		{"trigger": "UpdateVehicleDamageStatus", "contents": "UpdateVehicleDamageStatus(${1:vehicleid}, ${2:VEHICLE_PANEL_STATUS:panels}, ${3:VEHICLE_DOOR_STATUS:doors}, ${4:VEHICLE_LIGHT_STATUS:lights}, ${5:VEHICLE_TYRE_STATUS:tires})"},
		{"trigger": "GetVehicleModelInfo", "contents": "GetVehicleModelInfo(${1:vehiclemodel}, ${2:VEHICLE_MODEL_INFO:infotype}, ${3:&Float:x}, ${4:&Float:y}, ${5:&Float:z})"},
		{"trigger": "SetVehicleVirtualWorld", "contents": "SetVehicleVirtualWorld(${1:vehicleid}, ${2:virtualWorld})"},
		{"trigger": "GetVehicleVirtualWorld", "contents": "GetVehicleVirtualWorld(${1:vehicleid})"},
		{"trigger": "GetVehicleLandingGearState", "contents": "GetVehicleLandingGearState(${1:vehicleid})"},
		{"trigger": "IsValidVehicle", "contents": "IsValidVehicle(${1:vehicleid})"},
		{"trigger": "GetPlayerLastSyncedVehicleID", "contents": "GetPlayerLastSyncedVehicleID(${1:playerid})"},
		{"trigger": "GetPlayerLastSyncedTrailerID", "contents": "GetPlayerLastSyncedTrailerID(${1:playerid})"},
		{"trigger": "GetVehicleSpawnInfo", "contents": "GetVehicleSpawnInfo(${1:vehicleid}, ${2:&Float:spawnX}, ${3:&Float:spawnY}, ${4:&Float:spawnZ}, ${5:&Float:angle}, ${6:&colour1 = 0}, ${7:&colour2 = 0})"},
		{"trigger": "SetVehicleSpawnInfo", "contents": "SetVehicleSpawnInfo(${1:vehicleid}, ${2:modelid}, ${3:Float:spawnX}, ${4:Float:spawnY}, ${5:Float:spawnZ}, ${6:Float:angle}, ${7:colour1}, ${8:colour2}, ${9:respawnDelay = -2}, ${10:interior = -2})"},
		{"trigger": "GetVehicleColours", "contents": "GetVehicleColours(${1:vehicleid}, ${2:&colour1}, ${3:&colour2})"},
		{"trigger": "GetVehiclePaintjob", "contents": "GetVehiclePaintjob(${1:vehicleid})"},
		{"trigger": "GetVehicleInterior", "contents": "GetVehicleInterior(${1:vehicleid})"},
		{"trigger": "GetVehicleNumberPlate", "contents": "GetVehicleNumberPlate(${1:vehicleid}, ${2:plate[]}, ${3:len = sizeof (plate)})"},
		{"trigger": "SetVehicleRespawnDelay", "contents": "SetVehicleRespawnDelay(${1:vehicleid}, ${2:respawnDelay})"},
		{"trigger": "GetVehicleRespawnDelay", "contents": "GetVehicleRespawnDelay(${1:vehicleid})"},
		{"trigger": "SetVehicleOccupiedTick", "contents": "SetVehicleOccupiedTick(${1:vehicleid}, ${2:ticks})"},
		{"trigger": "GetVehicleOccupiedTick", "contents": "GetVehicleOccupiedTick(${1:vehicleid})"},
		{"trigger": "SetVehicleRespawnTick", "contents": "SetVehicleRespawnTick(${1:vehicleid}, ${2:ticks})"},
		{"trigger": "GetVehicleRespawnTick", "contents": "GetVehicleRespawnTick(${1:vehicleid})"},
		{"trigger": "GetVehicleLastDriver", "contents": "GetVehicleLastDriver(${1:vehicleid})"},
		{"trigger": "GetVehicleDriver", "contents": "GetVehicleDriver(${1:vehicleid})"},
		{"trigger": "IsPlayerInModShop", "contents": "IsPlayerInModShop(${1:playerid})"},
		{"trigger": "GetPlayerSirenState", "contents": "GetPlayerSirenState(${1:playerid})"},
		{"trigger": "GetPlayerLandingGearState", "contents": "GetPlayerLandingGearState(${1:playerid})"},
		{"trigger": "GetPlayerHydraReactorAngle", "contents": "GetPlayerHydraReactorAngle(${1:playerid})"},
		{"trigger": "GetPlayerTrainSpeed", "contents": "GetPlayerTrainSpeed(${1:playerid})"},
		{"trigger": "GetVehicleCab", "contents": "GetVehicleCab(${1:vehicleid})"},
		{"trigger": "GetVehicleTower", "contents": "GetVehicleTower(${1:vehicleid})"},
		{"trigger": "HasVehicleBeenOccupied", "contents": "HasVehicleBeenOccupied(${1:vehicleid})"},
		{"trigger": "SetVehicleBeenOccupied", "contents": "SetVehicleBeenOccupied(${1:vehicleid}, ${2:bool:occupied})"},
		{"trigger": "IsVehicleOccupied", "contents": "IsVehicleOccupied(${1:vehicleid})"},
		{"trigger": "IsVehicleDead", "contents": "IsVehicleDead(${1:vehicleid})"},
		{"trigger": "SetVehicleDead", "contents": "SetVehicleDead(${1:vehicleid}, ${2:bool:dead})"},
		{"trigger": "SetVehicleParamsSirenState", "contents": "SetVehicleParamsSirenState(${1:vehicleid}, ${2:bool:enabled})"},
		{"trigger": "ToggleVehicleSirenEnabled", "contents": "ToggleVehicleSirenEnabled(${1:vehicleid}, ${2:bool:enabled})"},
		{"trigger": "IsVehicleSirenEnabled", "contents": "IsVehicleSirenEnabled(${1:vehicleid})"},
		{"trigger": "GetVehicleMatrix", "contents": "GetVehicleMatrix(${1:vehicleid}, ${2:&Float:rightX}, ${3:&Float:rightY}, ${4:&Float:rightZ}, ${5:&Float:upX}, ${6:&Float:upY}, ${7:&Float:upZ}, ${8:&Float:atX}, ${9:&Float:atY}, ${10:&Float:atZ})"},
		{"trigger": "GetVehicleModelCount", "contents": "GetVehicleModelCount(${1:modelid})"},
		{"trigger": "GetVehicleModelsUsed", "contents": "GetVehicleModelsUsed()"},
		{"trigger": "HideVehicle", "contents": "HideVehicle(${1:vehicleid})"},
		{"trigger": "ShowVehicle", "contents": "ShowVehicle(${1:vehicleid})"},
		{"trigger": "IsVehicleHidden", "contents": "IsVehicleHidden(${1:vehicleid})"},
		{"trigger": "GetVehicleSirenState", "contents": "GetVehicleSirenState(${1:vehicleid})"},
		{"trigger": "GetVehicleHydraReactorAngle", "contents": "GetVehicleHydraReactorAngle(${1:vehicleid})"},
		{"trigger": "GetVehicleTrainSpeed", "contents": "GetVehicleTrainSpeed(${1:vehicleid})"},
		{"trigger": "EnableVehicleFriendlyFire", "contents": "EnableVehicleFriendlyFire()"},
		{"trigger": "GetVehicles", "contents": "GetVehicles(${1:vehicles[]}, ${2:size = sizeof (vehicles)})"},
		
		/*
			Deprecated
		*/
		{"trigger": "ChangeVehicleColor", "contents": "ChangeVehicleColor(${1:vehicleid}, ${2:colour1}, ${3:colour2})"},
		{"trigger": "EnableTirePopping", "contents": "EnableTirePopping(${1:bool:enable})"},
		{"trigger": "GetVehicleColor", "contents": "GetVehicleColor(${1:vehicleid}, ${2:&colour1}, ${3:&colour2})"},
		{"trigger": "GetRandomCarColPair", "contents": "GetRandomCarColPair(${1:modelid}, ${2:&colour1}, ${3:&colour2}, ${4:&colour3 = 0}, ${5:&colour4 = 0})"},
		{"trigger": "CarColIndexToColour", "contents": "CarColIndexToColour(${1:index}, ${2:alpha = 0xFF})"},

		/*
			Callbacks
		*/
		{"trigger": "OnTrailerUpdate", "contents": "OnTrailerUpdate(${1:playerid}, ${2:vehicleid})"},
		{"trigger": "OnVehicleSirenStateChange", "contents": "OnVehicleSirenStateChange(${1:playerid}, ${2:vehicleid}, ${3:newstate})"},
		{"trigger": "OnVehicleStreamIn", "contents": "OnVehicleStreamIn(${1:vehicleid}, ${2:forplayerid})"},
		{"trigger": "OnVehicleStreamOut", "contents": "OnVehicleStreamOut(${1:vehicleid}, ${2:forplayerid})"},
		{"trigger": "OnPlayerEnterVehicle", "contents": "OnPlayerEnterVehicle(${1:playerid}, ${2:vehicleid}, ${3:ispassenger})"},
		{"trigger": "OnPlayerExitVehicle", "contents": "OnPlayerExitVehicle(${1:playerid}, ${2:vehicleid})"},
		{"trigger": "OnVehicleSpawn", "contents": "OnVehicleSpawn(${1:vehicleid})"},
		{"trigger": "OnVehicleDeath", "contents": "OnVehicleDeath(${1:vehicleid}, ${2:killerid})"},
		{"trigger": "OnVehicleMod", "contents": "OnVehicleMod(${1:playerid}, ${2:vehicleid}, ${3:component})"},
		{"trigger": "OnEnterExitModShop", "contents": "OnEnterExitModShop(${1:playerid}, ${2:enterexit}, ${3:interiorid})"},
		{"trigger": "OnVehiclePaintjob", "contents": "OnVehiclePaintjob(${1:playerid}, ${2:vehicleid}, ${3:paintjob})"},
		{"trigger": "OnVehicleRespray", "contents": "OnVehicleRespray(${1:playerid}, ${2:vehicleid}, ${3:colour1}, ${4:colour2})"},
		{"trigger": "OnVehicleDamageStatusUpdate", "contents": "OnVehicleDamageStatusUpdate(${1:vehicleid}, ${2:playerid})"},
		{"trigger": "OnUnoccupiedVehicleUpdate", "contents": "OnUnoccupiedVehicleUpdate(${1:vehicleid}, ${2:playerid}, ${3:passenger_seat}, ${4:Float:new_x}, ${5:Float:new_y}, ${6:Float:new_z}, ${7:Float:vel_x}, ${8:Float:vel_y}, ${9:Float:vel_z})"}
	]
}