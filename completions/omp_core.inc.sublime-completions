{
    "scope": "source.pawn - variable.other.pawn",

    "completions": 
    [
    	"INVALID_TIMER",
		"MAX_WEAPONS",
		"MAX_WEAPON_SLOTS",
		"WEAPON_UNKNOWN",
		"WEAPON_FIST",
		"WEAPON_BRASSKNUCKLE",
		"WEAPON_GOLFCLUB",
		"WEAPON_NITESTICK",
		"WEAPON_NIGHTSTICK",
		"WEAPON_KNIFE",
		"WEAPON_BAT",
		"WEAPON_SHOVEL",
		"WEAPON_POOLSTICK",
		"WEAPON_KATANA",
		"WEAPON_CHAINSAW",
		"WEAPON_DILDO",
		"WEAPON_DILDO2",
		"WEAPON_VIBRATOR",
		"WEAPON_VIBRATOR2",
		"WEAPON_FLOWER",
		"WEAPON_CANE",
		"WEAPON_GRENADE",
		"WEAPON_TEARGAS",
		"WEAPON_MOLTOV",
		"WEAPON_MOLOTOV",
		"WEAPON_COLT45",
		"WEAPON_SILENCED",
		"WEAPON_DEAGLE",
		"WEAPON_SHOTGUN",
		"WEAPON_SAWEDOFF",
		"WEAPON_SHOTGSPA",
		"WEAPON_UZI",
		"WEAPON_MP5",
		"WEAPON_AK47",
		"WEAPON_M4",
		"WEAPON_TEC9",
		"WEAPON_RIFLE",
		"WEAPON_SNIPER",
		"WEAPON_ROCKETLAUNCHER",
		"WEAPON_HEATSEEKER",
		"WEAPON_FLAMETHROWER",
		"WEAPON_MINIGUN",
		"WEAPON_SATCHEL",
		"WEAPON_BOMB",
		"WEAPON_SPRAYCAN",
		"WEAPON_FIREEXTINGUISHER",
		"WEAPON_CAMERA",
		"WEAPON_NIGHT_VISION_GOGGLES",
		"WEAPON_THERMAL_GOGGLES",
		"WEAPON_PARACHUTE",
		"WEAPON_VEHICLE",
		"WEAPON_DROWN",
		"WEAPON_COLLISION",
		"WEAPON_SPLAT",
		"WEAPON_SLOT_UNKNOWN",
		"WEAPON_SLOT_UNARMED",
		"WEAPON_SLOT_MELEE",
		"WEAPON_SLOT_PISTOL",
		"WEAPON_SLOT_SHOTGUN",
		"WEAPON_SLOT_MACHINE_GUN",
		"WEAPON_SLOT_ASSAULT_RIFLE",
		"WEAPON_SLOT_LONG_RIFLE",
		"WEAPON_SLOT_ARTILLERY",
		"WEAPON_SLOT_EXPLOSIVES",
		"WEAPON_SLOT_EQUIPMENT",
		"WEAPON_SLOT_GIFT",
		"WEAPON_SLOT_GADGET",
		"WEAPON_SLOT_DETONATOR",
		"PLAYER_MARKERS_MODE_UNKNOWN",
		"PLAYER_MARKERS_MODE_OFF",
		"PLAYER_MARKERS_MODE_GLOBAL",
		"PLAYER_MARKERS_MODE_STREAMED",

		/*
			Pawn Utilities
		*/
		{"trigger": "__open_mp_unused_print", "contents": "__open_mp_unused_print(${1:const string[]})"},
		{"trigger": "print", "contents": "print(${1:const string[]})"},
		{"trigger": "__open_mp_unused_printf", "contents": "__open_mp_unused_printf(${1:const format[]}, ${2:OPEN_MP_TAGS:...})"},
		{"trigger": "printf", "contents": "printf(${1:const format[]}, ${2:OPEN_MP_TAGS:...})"},
		{"trigger": "format", "contents": "format(${1:output[]}, ${2:len = sizeof (output)}, ${3:const format[]}, ${4:{Float, _}:...})"},
		{"trigger": "SetTimer", "contents": "SetTimer(${1:const functionName[]}, ${2:interval}, ${3:bool:repeating})"},
		{"trigger": "SetTimerEx", "contents": "SetTimerEx(${1:const functionName[]}, ${2:interval}, ${3:bool:repeating}, ${4:const specifiers[] = \"\"}, ${5:OPEN_MP_TAGS:...})"},
		{"trigger": "KillTimer", "contents": "KillTimer(${1:timerid})"},
		{"trigger": "IsValidTimer", "contents": "IsValidTimer(${1:timerid})"},
		{"trigger": "IsRepeatingTimer", "contents": "IsRepeatingTimer(${1:timerid})"},
		{"trigger": "GetTimerRemaining", "contents": "GetTimerRemaining(${1:timerid})"},
		{"trigger": "GetTimerInterval", "contents": "GetTimerInterval(${1:timerid})"},
		{"trigger": "CountRunningTimers", "contents": "CountRunningTimers()"},
		{"trigger": "CallRemoteFunction", "contents": "CallRemoteFunction(${1:const functionName[]}, ${2:const specifiers[] = \"\"}, ${3:OPEN_MP_TAGS:...})"},
		{"trigger": "CallLocalFunction", "contents": "CallLocalFunction(${1:const functionName[]}, ${2:const specifiers[] = \"\"}, ${3:OPEN_MP_TAGS:...})"},
		{"trigger": "GameTextForAll", "contents": "GameTextForAll(${1:const format[]}, ${2:time}, ${3:style}, ${4:OPEN_MP_TAGS:...})"},
		{"trigger": "HideGameTextForAll", "contents": "HideGameTextForAll(${1:style})"},
		{"trigger": "SendClientMessageToAll", "contents": "SendClientMessageToAll(${1:colour}, ${2:const format[]}, ${3:OPEN_MP_TAGS:...})"},
		{"trigger": "SendPlayerMessageToAll", "contents": "SendPlayerMessageToAll(${1:senderid}, ${2:const format[]}, ${3:OPEN_MP_TAGS:...})"},
		{"trigger": "SendDeathMessage", "contents": "SendDeathMessage(${1:killer}, ${2:killee}, ${3:weapon})"},
		{"trigger": "GetWeaponName", "contents": "GetWeaponName(${1:WEAPON:weaponid}, ${2:weapon[]}, ${3:len = sizeof (weapon)})"},
		{"trigger": "IsValidNickName", "contents": "IsValidNickName(${1:const name[]})"},
		{"trigger": "WEAPON_SLOT:GetWeaponSlot", "contents": "WEAPON_SLOT:GetWeaponSlot(${1:WEAPON:weaponid})"},
		{"trigger": "GetAnimationName", "contents": "GetAnimationName(${1:index}, ${2:animationLibrary[]}, ${3:len1 = sizeof (animationLibrary)}, ${4:animationName[]}, ${5:len2 = sizeof (animationName)})"},
		{"trigger": "CreateExplosion", "contents": "CreateExplosion(${1:Float:x}, ${2:Float:y}, ${3:Float:z}, ${4:type}, ${5:Float:radius})"},

		/*
			Maths
		*/
		{"trigger": "VectorSize", "contents": "VectorSize(${1:Float:x}, ${2:Float:y}, ${3:Float:z})"},
		{"trigger": "asin", "contents": "asin(${1:Float:value})"},
		{"trigger": "acos", "contents": "acos(${1:Float:value})"},
		{"trigger": "atan", "contents": "atan(${1:Float:value})"},
		{"trigger": "atan2", "contents": "atan2(${1:Float:y}, ${2:Float:x})"},

		/*
			Server Config
		*/
		{"trigger": "GetTickCount", "contents": "GetTickCount()"},
		{"trigger": "GetServerTickRate", "contents": "GetServerTickRate()"},
		{"trigger": "GetMaxPlayers", "contents": "GetMaxPlayers()"},
		{"trigger": "SetModeRestartTime", "contents": "SetModeRestartTime(${1:Float:seconds})"},
		{"trigger": "GetModeRestartTime", "contents": "GetModeRestartTime()"},
		{"trigger": "GameModeExit", "contents": "GameModeExit()"},
		{"trigger": "GetConsoleVarAsString", "contents": "GetConsoleVarAsString(${1:const cvar[]}, ${2:buffer[]}, ${3:len = sizeof (buffer)})"},
		{"trigger": "GetConsoleVarAsInt", "contents": "GetConsoleVarAsInt(${1:const cvar[]})"},
		{"trigger": "GetConsoleVarAsFloat", "contents": "GetConsoleVarAsFloat(${1:const cvar[]})"},
		{"trigger": "GetConsoleVarAsBool", "contents": "GetConsoleVarAsBool(${1:const cvar[]})"},
		{"trigger": "AllowNickNameCharacter", "contents": "AllowNickNameCharacter(${1:character}, ${2:bool:allow})"},
		{"trigger": "IsNickNameCharacterAllowed", "contents": "IsNickNameCharacterAllowed(${1:character})"},
		{"trigger": "AddServerRule", "contents": "AddServerRule(${1:const rule[]}, ${2:const format[]}, ${3:OPEN_MP_TAGS:...})"},
		{"trigger": "SetServerRule", "contents": "SetServerRule(${1:const rule[]}, ${2:const format[]}, ${3:OPEN_MP_TAGS:...})"},
		{"trigger": "RemoveServerRule", "contents": "RemoveServerRule(${1:const rule[]})"},
		{"trigger": "IsValidServerRule", "contents": "IsValidServerRule(${1:const rule[]})"},
		{"trigger": "SetServerRuleFlags", "contents": "SetServerRuleFlags(${1:const rule[]}, ${2:E_SERVER_RULE_FLAGS:flags})"},
		{"trigger": "GetServerRuleFlags", "contents": "GetServerRuleFlags(${1:const rule[]})"},

		/*
			Client Config
		*/
		{"trigger": "DisableInteriorEnterExits", "contents": "DisableInteriorEnterExits()"},
		{"trigger": "DisableNameTagLOS", "contents": "DisableNameTagLOS()"},
		{"trigger": "LimitGlobalChatRadius", "contents": "LimitGlobalChatRadius(${1:Float:chatRadius})"},
		{"trigger": "LimitPlayerMarkerRadius", "contents": "LimitPlayerMarkerRadius(${1:Float:markerRadius})"},
		{"trigger": "SetGameModeText", "contents": "SetGameModeText(${1:const format[]}, ${2:OPEN_MP_TAGS:...})"},
		{"trigger": "SetGravity", "contents": "SetGravity(${1:Float:gravity})"},
		{"trigger": "GetGravity", "contents": "GetGravity()"},
		{"trigger": "SetNameTagDrawDistance", "contents": "SetNameTagDrawDistance(${1:Float:distance})"},
		{"trigger": "SetWeather", "contents": "SetWeather(${1:weatherid})"},
		{"trigger": "SetWorldTime", "contents": "SetWorldTime(${1:hour})"},
		{"trigger": "ShowNameTags", "contents": "ShowNameTags(${1:bool:show})"},
		{"trigger": "ShowPlayerMarkers", "contents": "ShowPlayerMarkers(${1:PLAYER_MARKERS_MODE:mode})"},
		{"trigger": "UsePlayerPedAnims", "contents": "UsePlayerPedAnims()"},
		{"trigger": "GetWeather", "contents": "GetWeather()"},
		{"trigger": "GetWorldTime", "contents": "GetWorldTime()"},
		{"trigger": "ToggleChatTextReplacement", "contents": "ToggleChatTextReplacement(${1:bool:enable})"},
		{"trigger": "ChatTextReplacementToggled", "contents": "ChatTextReplacementToggled()"},
		{"trigger": "EnableStuntBonusForAll", "contents": "EnableStuntBonusForAll(${1:bool:enable})"},
		{"trigger": "AllowAdminTeleport", "contents": "AllowAdminTeleport(${1:bool:allow})"},
		{"trigger": "IsAdminTeleportAllowed", "contents": "IsAdminTeleportAllowed()"},
		{"trigger": "AllowInteriorWeapons", "contents": "AllowInteriorWeapons(${1:bool:allow})"},
		{"trigger": "AreInteriorWeaponsAllowed", "contents": "AreInteriorWeaponsAllowed()"},
		{"trigger": "AreAllAnimationsEnabled", "contents": "AreAllAnimationsEnabled()"},
		{"trigger": "EnableAllAnimations", "contents": "EnableAllAnimations(${1:bool:enable})"},
		{"trigger": "EnableZoneNames", "contents": "EnableZoneNames(${1:bool:enable})"},

		/*
			NPC's
		*/
		{"trigger": "ConnectNPC", "contents": "ConnectNPC(${1:const name[]}, ${2:const script[]})"},

		/*
			Deprecated
		*/
		{"trigger": "GetPlayerPoolSize", "contents": "GetPlayerPoolSize()"},
		{"trigger": "GetVehiclePoolSize", "contents": "GetVehiclePoolSize()"},
		{"trigger": "GetActorPoolSize", "contents": "GetActorPoolSize()"},
		{"trigger": "EnableTirePopping", "contents": "EnableTirePopping(${1:bool:enable})"},
		{"trigger": "GameTextForAllf", "contents": "GameTextForAllf(${1:const format[]}, ${2:time}, ${3:style}, ${4:OPEN_MP_TAGS:...})"},
		{"trigger": "GetServerVarAsString", "contents": "GetServerVarAsString(${1:const cvar[]}, ${2:buffer[]}, ${3:len = sizeof (buffer)})"},
		{"trigger": "GetServerVarAsInt", "contents": "GetServerVarAsInt(${1:const cvar[]})"},
		{"trigger": "GetServerVarAsFloat", "contents": "GetServerVarAsFloat(${1:const cvar[]})"},
		{"trigger": "GetServerVarAsBool", "contents": "GetServerVarAsBool(${1:const cvar[]})"},
		{"trigger": "SendPlayerMessageToAllf", "contents": "SendPlayerMessageToAllf(${1:senderid}, ${2:const format[]}, ${3:OPEN_MP_TAGS:...})"},
		{"trigger": "SetDeathDropAmount", "contents": "SetDeathDropAmount(${1:amount})"},
		{"trigger": "SHA256_PassHash", "contents": "SHA256_PassHash(${1:const password[]}, ${2:const salt[]}, ${3:output[]}, ${4:size = sizeof (output)})"},
		{"trigger": "SetDeathDropAmount", "contents": "SetDeathDropAmount(${1:amount})"},
		{"trigger": "GetRunningTimers", "contents": "GetRunningTimers()"},

		/*
			Callbacks
		*/
		{"trigger": "OnGameModeInit", "contents": "OnGameModeInit()"},
		{"trigger": "OnGameModeExit", "contents": "OnGameModeExit()"},
		{"trigger": "OnFilterScriptInit", "contents": "OnFilterScriptInit()"},
		{"trigger": "OnFilterScriptExit", "contents": "OnFilterScriptExit()"}
	]
}