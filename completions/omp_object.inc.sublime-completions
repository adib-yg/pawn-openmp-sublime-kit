{
    "scope": "source.pawn - variable.other.pawn",

    "completions": 
    [
    	"MAX_OBJECTS",
		"INVALID_OBJECT_ID",
		"SELECT_OBJECT_GLOBAL_OBJECT",
		"SELECT_OBJECT_PLAYER_OBJECT",
		"OBJECT_MATERIAL_SIZE_32x32",
		"OBJECT_MATERIAL_SIZE_64x32",
		"OBJECT_MATERIAL_SIZE_64x64",
		"OBJECT_MATERIAL_SIZE_128x32",
		"OBJECT_MATERIAL_SIZE_128x64",
		"OBJECT_MATERIAL_SIZE_128x128",
		"OBJECT_MATERIAL_SIZE_256x32",
		"OBJECT_MATERIAL_SIZE_256x64",
		"OBJECT_MATERIAL_SIZE_256x128",
		"OBJECT_MATERIAL_SIZE_256x256",
		"OBJECT_MATERIAL_SIZE_512x64",
		"OBJECT_MATERIAL_SIZE_512x128",
		"OBJECT_MATERIAL_SIZE_512x256",
		"OBJECT_MATERIAL_SIZE_512x512",
		"OBJECT_MATERIAL_TEXT_ALIGN_CENTRE",
		"OBJECT_MATERIAL_TEXT_ALIGN_CENTER",
		"OBJECT_MATERIAL_TEXT_ALIGN_RIGHT",
		"OBJECT_MATERIAL_TEXT_ALIGN_LEFT",
		"OBJECT_MATERIAL_TEXT_ALIGN_CENT",
		"OBJECT_MATERIAL_TEXT_ALIGN_RIGT",
		"EDIT_RESPONSE_CANCEL",
		"EDIT_RESPONSE_FINAL",
		"EDIT_RESPONSE_UPDATE",

		/*
			Global
		*/
		{"trigger": "SetObjectsDefaultCameraCollision", "contents": "SetObjectsDefaultCameraCollision(${1:bool:disable})"},
		{"trigger": "__SetObjectsDefaultCameraCol", "contents": "__SetObjectsDefaultCameraCol()"},
		{"trigger": "HideObjectForPlayer", "contents": "HideObjectForPlayer(${1:playerid}, ${2:objectid})"},
		{"trigger": "ShowObjectForPlayer", "contents": "ShowObjectForPlayer(${1:playerid}, ${2:objectid})"},
		{"trigger": "HideNewObjectsForPlayer", "contents": "HideNewObjectsForPlayer(${1:playerid}, ${2:bool:toggle})"},
		{"trigger": "IsObjectHiddenForPlayer", "contents": "IsObjectHiddenForPlayer(${1:playerid}, ${2:objectid})"},
		{"trigger": "NewObjectsHiddenForPlayer", "contents": "NewObjectsHiddenForPlayer(${1:playerid})"},
		{"trigger": "GetObjectType", "contents": "GetObjectType(${1:playerid}, ${2:objectid})"},
		{"trigger": "AttachPlayerObjectToObject", "contents": "AttachPlayerObjectToObject(${1:playerid}, ${2:objectid}, ${3:parentid}, ${4:Float:offsetX}, ${5:Float:offsetY}, ${6:Float:offsetZ}, ${7:Float:rotationX}, ${8:Float:rotationY}, ${9:Float:rotationZ}, ${10:bool:syncRotation = true})"},
		{"trigger": "CreateObject", "contents": "CreateObject(${1:modelid}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z}, ${5:Float:rotationX}, ${6:Float:rotationY}, ${7:Float:rotationZ}, ${8:Float:drawDistance = 0.0})"},
		{"trigger": "AttachObjectToVehicle", "contents": "AttachObjectToVehicle(${1:objectid}, ${2:parentid}, ${3:Float:offsetX}, ${4:Float:offsetY}, ${5:Float:offsetZ}, ${6:Float:rotationX}, ${7:Float:rotationY}, ${8:Float:rotationZ})"},
		{"trigger": "AttachObjectToObject", "contents": "AttachObjectToObject(${1:objectid}, ${2:parentid}, ${3:Float:offsetX}, ${4:Float:offsetY}, ${5:Float:offsetZ}, ${6:Float:rotationX}, ${7:Float:rotationY}, ${8:Float:rotationZ}, ${9:bool:syncRotation = true})"},
		{"trigger": "AttachObjectToPlayer", "contents": "AttachObjectToPlayer(${1:objectid}, ${2:parentid}, ${3:Float:offsetX}, ${4:Float:offsetY}, ${5:Float:offsetZ}, ${6:Float:rotationX}, ${7:Float:rotationY}, ${8:Float:rotationZ})"},
		{"trigger": "SetObjectPos", "contents": "SetObjectPos(${1:objectid}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z})"},
		{"trigger": "GetObjectPos", "contents": "GetObjectPos(${1:objectid}, ${2:&Float:x}, ${3:&Float:y}, ${4:&Float:z})"},
		{"trigger": "SetObjectRot", "contents": "SetObjectRot(${1:objectid}, ${2:Float:rotationX}, ${3:Float:rotationY}, ${4:Float:rotationZ})"},
		{"trigger": "GetObjectRot", "contents": "GetObjectRot(${1:objectid}, ${2:&Float:rotationX}, ${3:&Float:rotationY}, ${4:&Float:rotationZ})"},
		{"trigger": "GetObjectModel", "contents": "GetObjectModel(${1:objectid})"},
		{"trigger": "SetObjectNoCameraCollision", "contents": "SetObjectNoCameraCollision(${1:objectid})"},
		{"trigger": "IsValidObject", "contents": "IsValidObject(${1:objectid})"},
		{"trigger": "DestroyObject", "contents": "DestroyObject(${1:objectid})"},
		{"trigger": "MoveObject", "contents": "MoveObject(${1:objectid}, ${2:Float:targetX}, ${3:Float:targetY}, ${4:Float:targetZ}, ${5:Float:speed}, ${6:Float:rotationX = -1000.0}, ${7:Float:rotationY = -1000.0}, ${8:Float:rotationZ = -1000.0})"},
		{"trigger": "SetObjectMaterial", "contents": "SetObjectMaterial(${1:objectid}, ${2:materialIndex}, ${3:modelid}, ${4:const textureLibrary[]}, ${5:const textureName[]}, ${6:materialColour = 0})"},
		{"trigger": "SetObjectMaterialText", "contents": "SetObjectMaterialText(${1:objectid}, ${2:const text[]}, ${3:materialIndex = 0}, ${4:OBJECT_MATERIAL_SIZE:materialSize = OBJECT_MATERIAL_SIZE_256x128}, ${5:const fontFace[] = \"Arial\"}, ${6:fontSize = 24}, ${7:bool:bold = true}, ${8:fontColour = 0xFFFFFFFF}, ${9:backgroundColour = 0}, ${10:OBJECT_MATERIAL_TEXT_ALIGN:textAlignment = OBJECT_MATERIAL_TEXT_ALIGN_LEFT}, ${11:OPEN_MP_TAGS:...})"},
		{"trigger": "StopObject", "contents": "StopObject(${1:objectid})"},
		{"trigger": "IsObjectMoving", "contents": "IsObjectMoving(${1:objectid})"},
		{"trigger": "BeginObjectEditing", "contents": "BeginObjectEditing(${1:playerid}, ${2:objectid})"},
		{"trigger": "BeginObjectSelecting", "contents": "BeginObjectSelecting(${1:playerid})"},
		{"trigger": "EndObjectEditing", "contents": "EndObjectEditing(${1:playerid})"},
		{"trigger": "GetObjectDrawDistance", "contents": "GetObjectDrawDistance(${1:objectid})"},
		{"trigger": "SetObjectMoveSpeed", "contents": "SetObjectMoveSpeed(${1:objectid}, ${2:Float:speed})"},
		{"trigger": "GetObjectMoveSpeed", "contents": "GetObjectMoveSpeed(${1:objectid})"},
		{"trigger": "GetObjectMovingTargetPos", "contents": "GetObjectMovingTargetPos(${1:objectid}, ${2:&Float:targetX}, ${3:&Float:targetY}, ${4:&Float:targetZ})"},
		{"trigger": "GetObjectMovingTargetRot", "contents": "GetObjectMovingTargetRot(${1:objectid}, ${2:&Float:rotationX}, ${3:&Float:rotationY}, ${4:&Float:rotationZ})"},
		{"trigger": "GetObjectAttachedData", "contents": "GetObjectAttachedData(${1:objectid}, ${2:&parentVehicle = 0}, ${3:&parentObject = 0}, ${4:&parentPlayer = 0})"},
		{"trigger": "GetObjectAttachedOffset", "contents": "GetObjectAttachedOffset(${1:objectid}, ${2:&Float:offsetX = 0.0}, ${3:&Float:offsetY = 0.0}, ${4:&Float:offsetZ = 0.0}, ${5:&Float:rotationX = 0.0}, ${6:&Float:rotationY = 0.0}, ${7:&Float:rotationZ = 0.0})"},
		{"trigger": "GetObjectSyncRotation", "contents": "GetObjectSyncRotation(${1:objectid})"},
		{"trigger": "IsObjectMaterialSlotUsed", "contents": "IsObjectMaterialSlotUsed(${1:objectid}, ${2:materialIndex})"},
		{"trigger": "GetObjectMaterial", "contents": "GetObjectMaterial(${1:objectid}, ${2:materialIndex}, ${3:&modelid}, ${4:textureLibrary[]}, ${5:textureLibrarySize = sizeof (textureLibrary)}, ${6:textureName[]}, ${7:textureNameSize = sizeof (textureName)}, ${8:&materialColour = 0})"},
		{"trigger": "GetObjectMaterialText", "contents": "GetObjectMaterialText(${1:objectid}, ${2:materialIndex}, ${3:text[]}, ${4:textSize = sizeof (text)}, ${5:&OBJECT_MATERIAL_SIZE:materialSize}, ${6:fontFace[]}, ${7:fontFaceSize = sizeof (fontFace)}, ${8:&fontSize = 0}, ${9:&bool:bold = true}, ${10:&fontColour = 0xFFFFFFFF}, ${11:&backgroundColour = 0}, ${12:&OBJECT_MATERIAL_TEXT_ALIGN:textAlignment = OBJECT_MATERIAL_TEXT_ALIGN_LEFT})"},
		{"trigger": "__IsObjectNoCameraCol", "contents": "__IsObjectNoCameraCol(${1:objectid})"},
		{"trigger": "HasObjectCameraCollision", "contents": "HasObjectCameraCollision(${1:objectid})"},
		
		/*
			Per-Player
		*/
		{"trigger": "CreatePlayerObject", "contents": "CreatePlayerObject(${1:playerid}, ${2:modelid}, ${3:Float:x}, ${4:Float:y}, ${5:Float:z}, ${6:Float:rotationX}, ${7:Float:rotationY}, ${8:Float:rotationZ}, ${9:Float:drawDistance = 0.0})"},
		{"trigger": "AttachPlayerObjectToVehicle", "contents": "AttachPlayerObjectToVehicle(${1:playerid}, ${2:objectid}, ${3:parentid}, ${4:Float:offsetX}, ${5:Float:offsetY}, ${6:Float:offsetZ}, ${7:Float:rotationX}, ${8:Float:rotationY}, ${9:Float:rotationZ})"},
		{"trigger": "SetPlayerObjectPos", "contents": "SetPlayerObjectPos(${1:playerid}, ${2:objectid}, ${3:Float:x}, ${4:Float:y}, ${5:Float:z})"},
		{"trigger": "GetPlayerObjectPos", "contents": "GetPlayerObjectPos(${1:playerid}, ${2:objectid}, ${3:&Float:x}, ${4:&Float:y}, ${5:&Float:z})"},
		{"trigger": "SetPlayerObjectRot", "contents": "SetPlayerObjectRot(${1:playerid}, ${2:objectid}, ${3:Float:rotationX}, ${4:Float:rotationY}, ${5:Float:rotationZ})"},
		{"trigger": "GetPlayerObjectRot", "contents": "GetPlayerObjectRot(${1:playerid}, ${2:objectid}, ${3:&Float:rotationX}, ${4:&Float:rotationY}, ${5:&Float:rotationZ})"},
		{"trigger": "GetPlayerObjectModel", "contents": "GetPlayerObjectModel(${1:playerid}, ${2:objectid})"},
		{"trigger": "SetPlayerObjectNoCameraCollision", "contents": "SetPlayerObjectNoCameraCollision(${1:playerid}, ${2:objectid})"},
		{"trigger": "__SetPlayerObjectNoCameraCol", "contents": "__SetPlayerObjectNoCameraCol()"},
		{"trigger": "IsValidPlayerObject", "contents": "IsValidPlayerObject(${1:playerid}, ${2:objectid})"},
		{"trigger": "DestroyPlayerObject", "contents": "DestroyPlayerObject(${1:playerid}, ${2:objectid})"},
		{"trigger": "MovePlayerObject", "contents": "MovePlayerObject(${1:playerid}, ${2:objectid}, ${3:Float:targetX}, ${4:Float:targetY}, ${5:Float:targetZ}, ${6:Float:speed}, ${7:Float:rotationX = -1000.0}, ${8:Float:rotationY = -1000.0}, ${9:Float:rotationZ = -1000.0})"},
		{"trigger": "StopPlayerObject", "contents": "StopPlayerObject(${1:playerid}, ${2:objectid})"},
		{"trigger": "IsPlayerObjectMoving", "contents": "IsPlayerObjectMoving(${1:playerid}, ${2:objectid})"},
		{"trigger": "AttachPlayerObjectToPlayer", "contents": "AttachPlayerObjectToPlayer(${1:playerid}, ${2:objectid}, ${3:parentid}, ${4:Float:offsetX}, ${5:Float:offsetY}, ${6:Float:offsetZ}, ${7:Float:rotationX}, ${8:Float:rotationY}, ${9:Float:rotationZ})"},
		{"trigger": "SetPlayerObjectMaterial", "contents": "SetPlayerObjectMaterial(${1:playerid}, ${2:objectid}, ${3:materialIndex}, ${4:modelid}, ${5:const textureLibrary[]}, ${6:const textureName[]}, ${7:materialColour = 0})"},
		{"trigger": "SetPlayerObjectMaterialText", "contents": "SetPlayerObjectMaterialText(${1:playerid}, ${2:objectid}, ${3:const text[]}, ${4:materialIndex = 0}, ${5:OBJECT_MATERIAL_SIZE:materialSize = OBJECT_MATERIAL_SIZE_256x128}, ${6:const fontFace[] = \"Arial\"}, ${7:fontSize = 24}, ${8:bool:bold = true}, ${9:fontColour = 0xFFFFFFFF}, ${10:backgroundColour = 0}, ${11:OBJECT_MATERIAL_TEXT_ALIGN:textAlignment = OBJECT_MATERIAL_TEXT_ALIGN_LEFT}, ${12:OPEN_MP_TAGS:...})"},
		{"trigger": "BeginPlayerObjectEditing", "contents": "BeginPlayerObjectEditing(${1:playerid}, ${2:objectid})"},
		{"trigger": "GetPlayerObjectDrawDistance", "contents": "GetPlayerObjectDrawDistance(${1:playerid}, ${2:objectid})"},
		{"trigger": "SetPlayerObjectMoveSpeed", "contents": "SetPlayerObjectMoveSpeed(${1:playerid}, ${2:objectid}, ${3:Float:speed})"},
		{"trigger": "GetPlayerObjectMoveSpeed", "contents": "GetPlayerObjectMoveSpeed(${1:playerid}, ${2:objectid})"},
		{"trigger": "GetPlayerObjectTarget", "contents": "GetPlayerObjectTarget(${1:playerid}, ${2:objectid}, ${3:&Float:targetX = 0.0}, ${4:&Float:targetY = 0.0}, ${5:&Float:targetZ = 0.0})"},
		{"trigger": "GetPlayerObjectAttachedData", "contents": "GetPlayerObjectAttachedData(${1:playerid}, ${2:objectid}, ${3:&parentVehicle}, ${4:&parentObject = 0}, ${5:&parentPlayer = 0})"},
		{"trigger": "GetPlayerObjectAttachedOffset", "contents": "GetPlayerObjectAttachedOffset(${1:playerid}, ${2:objectid}, ${3:&Float:offsetX = 0.0}, ${4:&Float:offsetY = 0.0}, ${5:&Float:offsetZ = 0.0}, ${6:&Float:rotationX = 0.0}, ${7:&Float:rotationY = 0.0}, ${8:&Float:rotationZ = 0.0})"},
		{"trigger": "GetPlayerObjectSyncRotation", "contents": "GetPlayerObjectSyncRotation(${1:playerid}, ${2:objectid})"},
		{"trigger": "IsPlayerObjectMaterialSlotUsed", "contents": "IsPlayerObjectMaterialSlotUsed(${1:playerid}, ${2:objectid}, ${3:materialIndex})"},
		{"trigger": "GetPlayerObjectMaterial", "contents": "GetPlayerObjectMaterial(${1:playerid}, ${2:objectid}, ${3:materialIndex}, ${4:&modelid}, ${5:textureLibrary[]}, ${6:textureLibrarySize = sizeof (textureLibrary)}, ${7:textureName[]}, ${8:textureNameSize = sizeof (textureName)}, ${9:&materialColour = 0})"},
		{"trigger": "GetPlayerObjectMaterialText", "contents": "GetPlayerObjectMaterialText(${1:playerid}, ${2:objectid}, ${3:materialIndex}, ${4:text[]}, ${5:textSize = sizeof (text)}, ${6:&OBJECT_MATERIAL_SIZE:materialSize}, ${7:fontFace[]}, ${8:fontFaceSize = sizeof (fontFace)}, ${9:&fontSize = 0}, ${10:&bool:bold = true}, ${11:&fontColour = 0xFFFFFFFF}, ${12:&backgroundColour = 0}, ${13:&OBJECT_MATERIAL_TEXT_ALIGN:textAlignment = OBJECT_MATERIAL_TEXT_ALIGN_LEFT})"},
		{"trigger": "__IsPlayerObjectNoCameraCol", "contents": "__IsPlayerObjectNoCameraCol(${1:playerid}, ${2:objectid})"},
		{"trigger": "HasPlayerObjectCameraCollision", "contents": "HasPlayerObjectCameraCollision(${1:playerid}, ${2:objectid})"},
		{"trigger": "GetPlayerSurfingPlayerObjectID", "contents": "GetPlayerSurfingPlayerObjectID(${1:playerid})"},
		{"trigger": "GetPlayerObjectMovingTargetPos", "contents": "GetPlayerObjectMovingTargetPos(${1:playerid}, ${2:objectid}, ${3:&Float:targetX}, ${4:&Float:targetY}, ${5:&Float:targetZ})"},
		{"trigger": "GetPlayerObjectMovingTargetRot", "contents": "GetPlayerObjectMovingTargetRot(${1:playerid}, ${2:objectid}, ${3:&Float:rotationX}, ${4:&Float:rotationY}, ${5:&Float:rotationZ})"},
		{"trigger": "GetPlayerCameraTargetPlayerObject", "contents": "GetPlayerCameraTargetPlayerObject(${1:playerid})"},
		{"trigger": "__GetPlayerCameraTargetPlayerOb", "contents": "__GetPlayerCameraTargetPlayerOb()"},
		
		/*
			Attachments
		*/
		{"trigger": "GetPlayerAttachedObject", "contents": "GetPlayerAttachedObject(${1:playerid}, ${2:index}, ${3:&modelid}, ${4:&bone = 0}, ${5:&Float:offsetX = 0.0}, ${6:&Float:offsetY = 0.0}, ${7:&Float:offsetZ = 0.0}, ${8:&Float:rotationX = 0.0}, ${9:&Float:rotationY = 0.0}, ${10:&Float:rotationZ = 0.0}, ${11:&Float:scaleX = 0.0}, ${12:&Float:scaleY = 0.0}, ${13:&Float:scaleZ = 0.0}, ${14:&materialColour1 = 0}, ${15:&materialColour2 = 0})"},
		{"trigger": "SetPlayerAttachedObject", "contents": "SetPlayerAttachedObject(${1:playerid}, ${2:index}, ${3:modelid}, ${4:bone}, ${5:Float:offsetX = 0.0}, ${6:Float:offsetY = 0.0}, ${7:Float:offsetZ = 0.0}, ${8:Float:rotationX = 0.0}, ${9:Float:rotationY = 0.0}, ${10:Float:rotationZ = 0.0}, ${11:Float:scaleX = 1.0}, ${12:Float:scaleY = 1.0}, ${13:Float:scaleZ = 1.0}, ${14:materialColour1 = 0}, ${15:materialColour2 = 0})"},
		{"trigger": "RemovePlayerAttachedObject", "contents": "RemovePlayerAttachedObject(${1:playerid}, ${2:index})"},
		{"trigger": "IsPlayerAttachedObjectSlotUsed", "contents": "IsPlayerAttachedObjectSlotUsed(${1:playerid}, ${2:index})"},
		{"trigger": "EditAttachedObject", "contents": "EditAttachedObject(${1:playerid}, ${2:index})"},
		
		/*
			DL
		*/
		{"trigger": "AddCharModel", "contents": "AddCharModel(${1:baseid}, ${2:newid}, ${3:const dff[]}, ${4:const textureLibrary[]})"},
		{"trigger": "AddSimpleModel", "contents": "AddSimpleModel(${1:virtualWorld}, ${2:baseid}, ${3:newid}, ${4:const dff[]}, ${5:const textureLibrary[]})"},
		{"trigger": "AddSimpleModelTimed", "contents": "AddSimpleModelTimed(${1:virtualWorld}, ${2:baseid}, ${3:newid}, ${4:const dff[]}, ${5:const textureLibrary[]}, ${6:timeOn}, ${7:timeOff})"},
		{"trigger": "FindModelFileNameFromCRC", "contents": "FindModelFileNameFromCRC(${1:crc}, ${2:output[]}, ${3:size = sizeof (output)})"},
		{"trigger": "FindTextureFileNameFromCRC", "contents": "FindTextureFileNameFromCRC(${1:crc}, ${2:output[]}, ${3:size = sizeof (output)})"},
		{"trigger": "RedirectDownload", "contents": "RedirectDownload(${1:playerid}, ${2:const url[]})"},
		{"trigger": "GetCustomModelPath", "contents": "GetCustomModelPath(${1:modelid}, ${2:dffPath[]}, ${3:dffSize = sizeof (dffPath)}, ${4:txdPath[]}, ${5:txdSize = sizeof (txdPath)})"},
		{"trigger": "IsValidCustomModel", "contents": "IsValidCustomModel(${1:modelid})"},
		
		/*
			Deprecated
		*/
		{"trigger": "SelectObject", "contents": "SelectObject(${1:playerid})"},
		{"trigger": "EditObject", "contents": "EditObject(${1:playerid}, ${2:objectid})"},
		{"trigger": "EditPlayerObject", "contents": "EditPlayerObject(${1:playerid}, ${2:objectid})"},
		{"trigger": "CancelEdit", "contents": "CancelEdit(${1:playerid})"},
		{"trigger": "GetObjectTarget", "contents": "GetObjectTarget(${1:objectid}, ${2:&Float:targetX = 0.0}, ${3:&Float:targetY = 0.0}, ${4:&Float:targetZ = 0.0})"},
		{"trigger": "SetObjectsDefaultCameraCol", "contents": "SetObjectsDefaultCameraCol(${1:bool:disable})"},
		{"trigger": "SetObjectNoCameraCol", "contents": "SetObjectNoCameraCol(${1:objectid})"},
		{"trigger": "IsObjectNoCameraCol", "contents": "IsObjectNoCameraCol(${1:objectid})"},
		{"trigger": "SetPlayerObjectNoCameraCol", "contents": "SetPlayerObjectNoCameraCol(${1:playerid}, ${2:objectid})"},
		{"trigger": "IsPlayerObjectNoCameraCol", "contents": "IsPlayerObjectNoCameraCol(${1:playerid}, ${2:objectid})"},
		{"trigger": "GetPlayerCameraTargetPlayerObj", "contents": "GetPlayerCameraTargetPlayerObj(${1:playerid})"},
		
		/*
			Callbacks
		*/
		{"trigger": "OnPlayerSelectObject", "contents": "OnPlayerSelectObject(${1:playerid}, ${2:SELECT_OBJECT:type}, ${3:objectid}, ${4:modelid}, ${5:Float:fX}, ${6:Float:fY}, ${7:Float:fZ})"},
		{"trigger": "OnPlayerEditObject", "contents": "OnPlayerEditObject(${1:playerid}, ${2:playerobject}, ${3:objectid}, ${4:EDIT_RESPONSE:response}, ${5:Float:fX}, ${6:Float:fY}, ${7:Float:fZ}, ${8:Float:rotationX}, ${9:Float:rotationY}, ${10:Float:rotationZ})"},
		{"trigger": "OnPlayerEditAttachedObject", "contents": "OnPlayerEditAttachedObject(${1:playerid}, ${2:EDIT_RESPONSE:response}, ${3:index}, ${4:modelid}, ${5:boneid}, ${6:Float:fOffsetX}, ${7:Float:fOffsetY}, ${8:Float:fOffsetZ}, ${9:Float:rotationX}, ${10:Float:rotationY}, ${11:Float:rotationZ}, ${12:Float:scaleX}, ${13:Float:scaleY}, ${14:Float:scaleZ})"},
		{"trigger": "OnObjectMoved", "contents": "OnObjectMoved(${1:objectid})"},
		{"trigger": "OnPlayerObjectMoved", "contents": "OnPlayerObjectMoved(${1:playerid}, ${2:objectid})"}
	]
}
